
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer-service
spec:
  replicas: 1
  selector:
    matchLabels:
      service-name: customer-service
  template:
    metadata:
      labels:
        service-name: customer-service
    spec:
      containers:
        - name: customer-service
          image: "localhost:5002/customer-service:0.1.0-SNAPSHOT"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP

          env:
          - name: SPRING_DATASOURCE_URL
            value: jdbc:postgresql://customer-service-postgres/customer_service

          - name: SPRING_DATASOURCE_USERNAME
            valueFrom:
              secretKeyRef:
                name: customer-service-postgres-database-credentials
                key: username

          - name: SPRING_DATASOURCE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: customer-service-postgres-database-credentials
                key: password

          - name: EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS
            value: kafka:9092

          - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI
            value: http://authorization-server:9000
          
          - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI
            value: http://authorization-server:9000/oauth2/jwks
          
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5

          resources:
            limits:
              cpu: 3000m
              memory: 256Mi
            requests:
              cpu: 200m
              memory: 256Mi
